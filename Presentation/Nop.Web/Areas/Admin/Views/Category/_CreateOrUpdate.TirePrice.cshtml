@model Nop.Web.Areas.Admin.Models.Catalog.CategoryModel

@inject IStoreService storeService
@using Nop.Services.Stores
@using Nop.Web.Framework.Models.DataTables
@inherits Nop.Web.Framework.Mvc.Razor.NopRazorPage<TModel>
@using Microsoft.AspNetCore.Routing
@using Nop.Web.Areas.Admin.Models.Catalog; 
@{
    var stores = storeService.GetAllStores();
}

<div class="panel-body">
    <div class="panel panel-default">
        <div class="panel-heading">
            @T("Admin.Catalog.Products.TierPrices")
        </div>
        
            <div class="panel-body">
                <p>
                    @T("Admin.Catalog.Products.TierPrices.Hint")
                </p>
                @await Html.PartialAsync("Table", new DataTablesModel
           {
               Name = "tierprices-grid",
               UrlRead = new DataUrl("TierPriceList", "Category", new RouteValueDictionary { [nameof(Model.TierPriceSearchModel.CategoryId)] = Model.TierPriceSearchModel.CategoryId }),
               UrlDelete = new DataUrl("TierPriceDelete", "Category", null),
               Length = Model.TierPriceSearchModel.PageSize,
               LengthMenu = Model.TierPriceSearchModel.AvailablePageSizes,
               ColumnCollection = new List<ColumnProperty>
               {
                   new ColumnProperty(nameof(TierPriceModel.Store))
                            {
                                Title = T("Admin.Catalog.Products.TierPrices.Fields.Store").Text,
                                Visible = stores.Count > 1
                            },
                   new ColumnProperty(nameof(TierPriceModel.CustomerRole))
                            {
                                Title = T("Admin.Catalog.Products.TierPrices.Fields.CustomerRole").Text
                            },
                   new ColumnProperty(nameof(TierPriceModel.Quantity))
                            {
                                Title = T("Admin.Catalog.Products.TierPrices.Fields.Quantity").Text
                            },
                   new ColumnProperty(nameof(TierPriceModel.Price))
                            {
                                Title = T("Admin.Catalog.Products.TierPrices.Fields.Price").Text
                            },
                   new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.Catalog.TierPriceModel.StartDateTimeUtc))
                            {
                                Title = T("Admin.Catalog.Products.TierPrices.Fields.StartDateTimeUtc").Text,
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(TierPriceModel.EndDateTimeUtc))
                            {
                                Title = T("Admin.Catalog.Products.TierPrices.Fields.EndDateTimeUtc").Text,
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.Catalog.TierPriceModel.Id))
                            {
                                Title = T("Admin.Common.Edit").Text,
                                Width = "100",
                                ClassName =  NopColumnClassDefaults.Button,
                                Render = new RenderCustom("renderPriceColumnEdit")
                            },
                            new ColumnProperty(nameof(TierPriceModel.Id))
                            {
                                Title = T("Admin.Common.Delete").Text,
                                Width = "100",
                                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                                ClassName =  NopColumnClassDefaults.Button
                            }
               }
           })


                <script>
                function renderPriceColumnEdit(data, type, row, meta) {
                    return '<button onclick=\"javascript:OpenWindow(\'@Url.Content("~/Admin/Category/TierPriceEditPopup/")' + data + '?btnId=btnRefreshTierPrices&formId=category-form\' , 800, 600, true); return false;\" class="btn btn-default"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</button>';
                }
                </script>
            </div>
            <div class="panel-footer">
                <button type="submit" id="btnAddNewTierPrice" onclick="javascript:OpenWindow('@(Url.Action("TierPriceCreatePopup", "Category", new { categoryId = Model.Id, btnId = "btnRefreshTierPrices", formId = "category-form"}))', 800, 600, true); return false;" class="btn btn-primary">
                        @T("Admin.Catalog.Products.TierPrices.AddNew")
                    </button>
                <input type="submit" id="btnRefreshTierPrices" style="display: none" />
                <script>
                    $(document).ready(function () {
                        $('#btnRefreshTierPrices').click(function () {
                            updateTable('#tierprices-grid');
                            //return false to don't reload a page
                            return false;
                        });
                    });
                </script>
            </div>
        
    </div>
</div>
