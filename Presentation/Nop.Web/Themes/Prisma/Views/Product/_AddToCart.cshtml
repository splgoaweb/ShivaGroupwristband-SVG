@model ProductDetailsModel.AddToCartModel
@using Nop.Core.Domain.Orders
@if (Model.UpdatedShoppingCartItemId > 0)
{
    <input asp-for="UpdatedShoppingCartItemId" type="hidden" />
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
    // custom code start
    if (ViewData["Enableaggrigation"] != null && ViewData["colorsquarecount"] != null)
    {
        if (Convert.ToBoolean(ViewData["Enableaggrigation"]) == true && Convert.ToInt32(ViewData["colorsquarecount"]) > 0)
        {
            <div class="add-to-cart">
                <div class="add-to-cart-panel">
                    @{
                        var addToCartText = "";
                        if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                        {
                            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                        }
                        else
                        {
                            addToCartText = T("ShoppingCart.AddToCart").Text;
                            if (Model.IsRental)
                            {
                                addToCartText = T("ShoppingCart.Rent").Text;
                            }
                            if (Model.AvailableForPreOrder)
                            {
                                addToCartText = T("ShoppingCart.PreOrder").Text;
                            }
                        }
                        @*<input type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-butto" value="add to cart" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocartqty_details('@Url.Action("AddProductToCartWithMultipleQuantity_Details", "ShoppingCart", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" />*@
                        @*<input type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocartqty_details('@Url.Action("AddProductToCartWithMultipleQuantity_Details", "ShoppingCart", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" />*@
                        <button type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocartqty_details('@Url.Action("AddProductToCartWithMultipleQuantity_Details", "ShoppingCart", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;"><span>@addToCartText</span></button>
                        @*<button type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="Edit And Design" data-productid="@Model.ProductId" onclick="location.href='<%: Url.Action(" GetSVG","Svg",new { ProductId=1}) %>'"><span>Edit And Design</span></button>
                        <a href="@Url.Action("GetSVG","Svg",new { ProductId = Model.ProductId})">test</a>*@
                        <input type="button" class="button-1 add-to-cart-button" value="Edit And Design" onclick="location.href='@Url.Action("GetSVG","Svg",new { ProductId = Model.ProductId})'" />
                    }
                </div>
            </div>
                        }
                        else
                        {
                            // custom code end
            <div class="add-to-cart">
                @if (!string.IsNullOrEmpty(Model.MinimumQuantityNotification))
                                {
                    <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
                            }
                            @if (!Model.DisableBuyButton)
                            {
                    <div class="add-to-cart-panel">

                        @if (Model.AllowedQuantities.Count > 0)
                            {
                            <div class="qty-wrapper">
                                <label asp-for="EnteredQuantity" asp-postfix=":" class="qty-label"></label>
                                <select asp-for="EnteredQuantity" asp-items="Model.AllowedQuantities" id="product_enteredQuantity_@Model.ProductId" class="qty-dropdown" aria-label=@T("Products.Qty.AriaLabel")></select>
                                <script asp-location="Footer">
			                $(document).ready(function () {
			                    $("#product_enteredQuantity_@Model.ProductId").on("change", function () {
                                    var data = {
                                        productId: @Model.ProductId,
	                                    quantity: $('#product_enteredQuantity_@Model.ProductId').find(":selected").text()

                                    };
	                                $(document).trigger({ type: "product_quantity_changed", changedData: data });
                            });
			                });
                                </script>
                            </div>
                        }
                        else
                        {
                            <div class="qty-wrapper">
                                <label asp-for="EnteredQuantity" asp-postfix=":" class="qty-label"></label>
                                <span class="decrease">decrease</span>
                                <input asp-for="EnteredQuantity" id="product_enteredQuantity_@Model.ProductId"  class="qty-input" type="text" aria-label=@T("Products.Qty.AriaLabel") />
                                <span class="increase">increase</span>
                                @*//when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)*@
                                <script asp-location="Footer">
                        	//when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                            $(document).ready(function () {
                    		    $("#@Html.IdFor(model => model.EnteredQuantity)").on("keydown", function(event) {
                                    if (event.keyCode == 13) {
                            		$("#add-to-cart-button-@Model.ProductId").trigger("click");
                                        return false;
                                    }
                                });

	                            $("#product_enteredQuantity_@Model.ProductId").on("input propertychange paste", function () {
	                                var data = {
	                                    productId: @Model.ProductId,
	                                    quantity: $('#product_enteredQuantity_@Model.ProductId').val()
	                                };
	                                $(document).trigger({ type: "product_quantity_changed", changedData: data });
	                            });
	                        });
                                </script>
                            </div>
                        }
                        @{
                            var addToCartText = "";
                            if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                            {
                                addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                            }
                            else
                            {
                                addToCartText = T("ShoppingCart.AddToCart").Text;
                                if (Model.IsRental)
                                {
                                    addToCartText = T("ShoppingCart.Rent").Text;
                                }
                                if (Model.AvailableForPreOrder)
                                {
                                    addToCartText = T("ShoppingCart.PreOrder").Text;
                                }
                            }
                            <button type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;"><span>@addToCartText</span></button>
                        }
                    </div>

                }
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAddInfo, additionalData = Model })
            </div>
            if (!string.IsNullOrEmpty(Model.PreOrderAvailabilityStartDateTimeUserTime))
            {
                <div class="pre-order-availability-date">
                    <label>@T("ShoppingCart.PreOrderAvailability"):</label>
                    @Html.Raw(Model.PreOrderAvailabilityStartDateTimeUserTime)
                </div>
            }
        }
    }
}
